name: CI/CD - ToDoList API

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: todo_user
          POSTGRES_PASSWORD: todo_pass
          POSTGRES_DB: todo_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U todo_user -d todo_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Wait for PostgreSQL
        run: |
          for i in {1..20}; do
            if pg_isready -h localhost -p 5432 -U todo_user; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 3
          done

      - name: Run tests with Maven
        run: mvn clean verify
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/todo_db
          SPRING_DATASOURCE_USERNAME: todo_user
          SPRING_DATASOURCE_PASSWORD: todo_pass
          API_SECRET: ${{ secrets.API_SECRET }}
          API_EXPIRATION_TIME: ${{ secrets.API_EXPIRATION_TIME }}

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: todo-api-jar
          path: target/*.jar

  docker:
    runs-on: ubuntu-latest
    needs: build-test  # only run if tests pass

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: todo-api-jar
          path: ./app

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            cmd.exe /c 'cd /d "D:\My java projects\ToDoListAPI" && deploy.cmd'