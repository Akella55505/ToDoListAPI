stages:
  - test
  - docker

variables:
  SPRING_PROFILES_ACTIVE: "test"
  SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/todo_db"
  SPRING_DATASOURCE_USERNAME: "todo_user"
  SPRING_DATASOURCE_PASSWORD: "todo_pass"

cache:
  paths:
    - .m2/repository

build-test:
  stage: test
  image: maven:3.9.6-eclipse-temurin-21
  services:
    - name: postgres:16
      alias: postgres
  variables:
    POSTGRES_USER: "todo_user"
    POSTGRES_PASSWORD: "todo_pass"
    POSTGRES_DB: "todo_db"
    API_SECRET: $API_SECRET
    API_EXPIRATION_TIME: $API_EXPIRATION_TIME
  before_script:
    - apt-get update && apt-get install -y postgresql-client
  script:
    - echo "Waiting for Postgres..."
    - until pg_isready -h postgres -U "$POSTGRES_USER" -d "$POSTGRES_DB"; do sleep 3; done
    - mvn clean verify
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week
    reports:
      junit:
        - target/surefire-reports/*.xml
        - target/failsafe-reports/*.xml

docker:
  stage: docker
  image: docker:27.0.3
  services:
    - docker:27.0.3
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_USERNAME: $DOCKER_USERNAME
    DOCKER_PASSWORD: $DOCKER_PASSWORD
    DOCKER_IMAGE: $DOCKER_IMAGE
  dependencies:
    - build-test
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t "$DOCKER_IMAGE:latest" .
    - docker push "$DOCKER_IMAGE:latest"
  only:
    - master
